name: Docker Build and K8s Manifest Update

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  INFRA_REPO: ysfAskri/hello-world-k8s

jobs:
  build-and-update:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Checkout infrastructure repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.INFRA_REPO }}
          token: ${{ secrets.PAT }}
          path: infra

      - name: Debug - Show current yaml contents
        run: |
          echo "Current contents of hello-world.yaml:"
          cat infra/hello-world.yaml

      - name: Update Kubernetes manifests
        run: |
          NEW_IMAGE_TAG="${{ steps.meta.outputs.tags }}"
          sed -i "s|image: ghcr.io/ysfaskri/hello-world-react:[^ ]*|image: $NEW_IMAGE_TAG|" infra/hello-world.yaml
          echo "Contents after sed command:"
          cat infra/hello-world.yaml
          if [[ -n $(git -C infra status -s) ]]; then
            echo "Changes detected"
            echo "CHANGES_EXIST=true" >> $GITHUB_ENV
          else
            echo "No changes detected"
            echo "CHANGES_EXIST=false" >> $GITHUB_ENV
          fi

      - name: Commit and push changes
        if: env.CHANGES_EXIST == 'true' && github.event_name != 'pull_request'
        run: |
          cd infra
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git add hello-world.yaml
          git commit -m "Update image to ${{ steps.meta.outputs.tags }}"
          git push

      - name: Debug - Show final yaml contents
        run: |
          echo "Final contents of hello-world.yaml:"
          cat infra/hello-world.yaml